filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>% View()
mutate(nome_movimento = fct_reorder(nome_movimento, total)) %>% View()
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>% View()
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n))
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = fct_reorder(nome_movimento, total)) %>% View()
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>% View()
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total))
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>%
ggplot(aes(n, nome_movimento)) +
geom_col() +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 2. Livelli  is there for movements of type Scivolamento rotazionale/traslativo
in the 1. livello?")
geom_col(aes(fill=date_info) +
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>%
ggplot(aes(n, nome_movimento)) +
geom_col(aes(fill=date_info)) +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 2. Livelli  is there for movements of type Scivolamento rotazionale/traslativo
in the 1. livello?")
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>%
ggplot(aes(n, nome_movimento)) +
geom_col(aes(fill=date_info)) +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 2. Livelli  is there for movements of type Scivolamento rotazionale/traslativo
in the 1. livello?")
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>%
ggplot(aes(n, nome_movimento)) +
geom_col(aes(fill=date_info)) +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 2. Livelli  is there for movements of type Scivolamento rotazionale/traslativo
in the 1. livello?")
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>%
ggplot(aes(n, nome_movimento)) +
geom_col(aes(fill=date_info)) +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 2. Livelli  is there for movements of type Scivolamento rotazionale/traslativo
in the 1. livello and what day information do they have?")
head(df_res)
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>%
ggplot(aes(n, nome_movimento)) +
geom_col(aes(fill=date_info)) +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 2. Livelli  is there for movements of type Scivolamento rotazionale/traslativo
in the 1. livello and what day information do they have?")
res_raw %>%
filter(!is.na(anno_min), !is.na(mese_min), !is.na(giorno_min)) %>%
filter(anno_min > 2000) %>%
filter(str_detect(nome_movimento, "trasla|rota")) %>%
count(tipologia, nome_movimento, sort = T) %>%
mutate(tipologia = fct_reorder(tipologia, n)) %>%
ggplot(aes(n, tipologia)) +
geom_col(aes(fill=nome_movimento)) +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 1. Livelli  is there for movements of type 'scivolamento rotazionale' or 'scivolamento traslativo'
in the 2. livello?")
#'
#' query on location, date and type of movement
#' and make some interesting plots
#'
# load libraries ----------------------------------------------------------
library(iffitoR)
library(tidyverse)
library(sf)
library(RODBC)
# set ggplot theme
theme(theme_set(theme_light()))
# query date --------------------------------------------------------------
res_raw = make_shapefile(
database_dir = "../euracR/data/database/",
# normally null only setting it here for me
attribute_database_name = "tbl_frane",
# the name without extension
dictionary_database_name = "diz_frane",
shapefile = "../euracR/data/Shapefiles/IFFI10_1.shp",
# the colums we want to retrieve directly
attri = c("anno_min",
"mese_min",
"giorno_min"),
# tables to join the description
joins = list(
"tbl_frane.Generalita.Cod_tipo" = c(
"diz_frane.diz_tipo_movi.cod_tipo",
"diz_frane.diz_tipo_movi.tipologia"
),
"tbl_frane.clas_ii_liv.movimento" = c(
"diz_frane.diz_movimenti.movimento",
"diz_frane.diz_movimenti.nome_movimento"
)
)
)
# write out different datasets --------------------------------------------
# write out the one with duplicates
st_write(res_raw, "local_data/compare_distinct_nondistict/duplicates_smallquery.gpkg")
# filter them afterwards and write the out
filtered = res_raw %>% distinct(PIFF_ID, .keep_all = T)
st_write(filtered, "local_data/compare_distinct_nondistict/filtered_distinct_afterwards.gpkg")
# query the data again, but change the function call in iffitoR
st_write(res_raw, "local_data/compare_distinct_nondistict/distinct_in_iffitoR.gpkg")
# compare different approaches --------------------------------------------
unfiltered = st_read("local_data/compare_distinct_nondistict/duplicates_smallquery.gpkg") %>% st_drop_geometry(.)
filtered_after = st_read("local_data/compare_distinct_nondistict/filtered_distinct_afterwards.gpkg") %>% st_drop_geometry(.)
filtered_before = st_read("local_data/compare_distinct_nondistict/distinct_in_iffitoR.gpkg") %>% st_drop_geometry(.)
dim(unfiltered)
dim(filtered_after)
dim(filtered_before)
# compare two filtered versions
all_equal(filtered_before, filtered_after)
# which obseravations got filtered out
diff = anti_join(unfiltered, filtered_after)
# filter for date ---------------------------------------------------------
res_raw_bool = res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
)
df_res =res_raw_bool %>%
st_drop_geometry() %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(tipologia, date_info) %>%
group_by(tipologia) %>%
mutate(total = sum(n))
ggplot(df_res) +
geom_col(aes(x=n, y=tipologia, fill=date_info))
# filter primeiro livello -------------------------------------------------
res_raw %>%
filter(!is.na(anno_min), !is.na(mese_min), !is.na(giorno_min)) %>%
filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
count(nome_movimento, sort = T) %>%
mutate(nome_movimento = fct_reorder(nome_movimento, n)) %>%
ggplot(aes(n, nome_movimento)) +
geom_col() +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 2. Livelli  is there for movements of type Scivolamento rotazionale/traslativo
in the 1. livello?")
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>%
ggplot(aes(n, nome_movimento)) +
geom_col(aes(fill=date_info)) +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 2. Livelli  is there for movements of type Scivolamento rotazionale/traslativo
in the 1. livello and what day information do they have?")
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>%
ggplot(aes(n, nome_movimento)) +
geom_col(aes(fill=date_info)) +
labs(y = "Nome Movimento (2. livello)",
title = "What type of 2. Livelli  is there for movements of type Scivolamento rotazionale/traslativo
in the 1. livello and what day information do they have?")
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>% View()
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)) %>% View()
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>% View()
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total))
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>% View()
res_raw %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total))
res_raw %>%
st_drop_geometry(.) %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total))
res_raw %>%
st_drop_geometry(.) %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total))
a = res_raw %>%
st_drop_geometry(.) %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n)) %>%
mutate(nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total))
head(a, n=50)
head(a, n=20)
head(a, n=30)
head(a, n=30)
head(a, n=20)
str(a)
class(a$total)
glimpse(a)
df = res_raw %>%
st_drop_geometry(.) %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n))
df
glimpse(df)
df %>%
mutate(
nome_movimento = as.factor(nome_movimento),
nome_movimento = fct_reorder(nome_movimento, total)
) %>%
ggplot(aes(n, nome_movimento)) +
geom_col(aes(fill = date_info)) +
labs(y = "Nome Movimento")
df = res_raw %>%
st_drop_geometry(.) %>%
mutate(
year_present = if_else(!is.na(anno_min), true = TRUE, false = FALSE),
month_present = if_else(!is.na(mese_min), true = TRUE, false = FALSE),
day_present = if_else(!is.na(giorno_min), true = TRUE, false = FALSE)
) %>%
#filter(anno_min > 2000) %>%
filter(str_detect(tipologia, "trasla")) %>%
mutate(date_info = if_else(day_present, true = "day",
false = if_else(month_present, true = "month",
false = if_else(year_present, true = "year", false="no date")))) %>%
count(nome_movimento, date_info, sort = T) %>%
group_by(nome_movimento) %>%
mutate(total = sum(n))
head(df)
head(df, n=20)
levels(df$nome_movimento)
