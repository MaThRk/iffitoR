geom_bar(fill = "grey", col = "black", size = 1.2) +
geom_text(
aes(label = ..count..),
stat = 'count',
nudge_y = 0.125,
vjust = -1
) +
scale_x_date(
date_breaks = "1 year",
labels = scales::date_format("%Y"),
limits = as.Date(c("2000-01-02", "2020-12-01"))
) +
labs(title = "Count of translational movements with day-information",
x = "Year",
y = "Count") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90),
axis.title.x = element_text(vjust = -1),
panel.grid.major = element_blank()
) +
annotate(
geom = "text",
x = as.Date("2016-01-01"),
y = 60,
label = paste0("n=", nrow(res_dates))
) +
annotate(
geom = "rect",
xmin = as.Date("2015-01-01"),
xmax = as.Date("2017-01-01"),
ymin = 55,
ymax = 65,
y = 60,
label = paste0("n=", nrow(res_dates)),
alpha = .5,
col = "black",
size = 1
)
twok8_twok14_twok18 = res_dates %>%
filter(year.int %in% c(2008, 2014, 2018))
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x = day.posix),
fill = "grey",
col = "black",
size = 1.2) +
scale_x_date(date_breaks = "1 month",
labels = scales::date_format("%m")) +
labs(y = "Count", title = "Translational Landslides in 2008, 2014 and 2018", x =
"Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size = .5),
axis.text.x = element_text(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
## get data from south tyrol
south_tyrol = iffitoR::get_shape_southtyrol()
twok8_twok14_twok18$year.int = as.factor(twok8_twok14_twok18$year.int)
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col = year.int, size = area)) +
scale_color_manual(values = c("red", "green", "blue"), name = "Year") +
scale_size(name = "Area in m^2") +
facet_wrap(vars(year.int), ncol = 1) +
theme_minimal()
# make animation
anim_data_slides = res_dates %>% filter(anno_min > 2005)
anim = tm_shape(south_tyrol) + tm_borders(lwd=2, col="black") + tm_layout(frame = F) +
tm_shape(anim_data_slides) + tm_dots(size="area", scale=5) +
tm_facets(along="day.posix.real", free.coords = FALSE)
library(tmap)
anim = tm_shape(south_tyrol) + tm_borders(lwd=2, col="black") + tm_layout(frame = F) +
tm_shape(anim_data_slides) + tm_dots(size="area", scale=5) +
tm_facets(along="day.posix.real", free.coords = FALSE)
anim
anim = tm_shape(south_tyrol) + tm_borders(lwd=2, col="black") + tm_layout(frame = F, bg.color="black") +
tm_shape(anim_data_slides) + tm_dots(size="area", scale=5)
anim
anim = tm_shape(south_tyrol) + tm_borders(lwd=2, col="black") + tm_layout(frame = F) +
tm_shape(anim_data_slides) + tm_dots(size="area", scale=5)
anim
anim = tm_shape(south_tyrol) + tm_borders(lwd=2, col="white") + tm_layout(frame = F, bg.colo="black") +
tm_shape(anim_data_slides) + tm_dots(size="area", scale=5)
anim
anim = tm_shape(south_tyrol) + tm_borders(lwd=2, col="white") + tm_layout(frame = F, bg.colo="black") +
tm_shape(anim_data_slides) + tm_dots(size="area", scale=5, col="white")
anim
anim = tm_shape(south_tyrol) +
tm_borders(lwd=2, col="white") +
tm_layout(frame = F,
bg.color="black",
title="test") +
tm_shape(anim_data_slides) +
tm_dots(size="area", scale=5, col="white")
anim
anim = tm_shape(south_tyrol) +
tm_borders(lwd=2, col="white") +
tm_layout(frame = F,
bg.color="black",
title="test",
title.color = "white") +
tm_shape(anim_data_slides) +
tm_dots(size="area", scale=5, col="white")
anim
fontfamily
anim = tm_shape(south_tyrol) +
tm_borders(lwd=2, col="white") +
tm_layout(frame = F,
bg.color="black",
title="test",
title.color = "white")
anim
anim = tm_shape(south_tyrol) +
tm_borders(lwd=2, col="white") +
tm_layout(frame = F,
bg.color="black",
title="test",,
title.size = 20,
title.color = "white")
anim
anim = tm_shape(south_tyrol) +
tm_borders(lwd=2, col="white") +
tm_layout(frame = F,
bg.color="black",
title="test",,
title.size = 12,
title.color = "white")
anim
anim = tm_shape(south_tyrol) +
tm_borders(lwd=2, col="white") +
tm_layout(frame = F,
bg.color="black",
title="test",,
title.size = 6,
title.color = "white")
anim
res_dates$nome_movimento
unique(res_dates$nome_movimento)
anim = tm_shape(south_tyrol) +
tm_borders(lwd=2, col="white") +
tm_layout(frame = F,
bg.color="black",
title="test",,
title.size = 6,
title.color = "Translational Slides \n in South Tyrol") +
tm_shape(anim_data_slides) +
tm_dots(size="area", scale=5, col="white")
anim
anim = tm_shape(south_tyrol) +
tm_borders(lwd=2, col="white") +
tm_layout(frame = F,
bg.color="black",
title="Translational Slides in South Tyrol",
title.size = 6,
title.color = "white") +
tm_shape(anim_data_slides) +
tm_dots(size="area", scale=5, col="white")
anim
# there are some exceptional outliers
df %>%
filter(str_detect(nome_movimento, "crollo|rotaz|trasla")) %>%
ggplot() +
geom_boxplot(aes(area, nome_movimento, fill=nome_movimento)) +
scale_fill_manual(values=wes_palette(n=3, name="Royal1"), name="Type of movement") +
labs(title="Distribution of area for three types of movements",
x="Area [m^2]") +
theme(axis.title.y = element_blank())
# so a add a log ten scale on the x axis
df %>%
filter(str_detect(nome_movimento, "crollo|rotaz|trasla")) %>%
ggplot() +
geom_boxplot(aes(area, nome_movimento, fill=nome_movimento)) +
# geom_jitter(aes(area, nome_movimento), alpha=.1) +
scale_fill_manual(values=wes_palette(n=3, name="Royal1"), name="Type of movement") +
scale_x_log10(labels=scales::comma) +
labs(title="Boxplots of area (base-10 logarithmic scale)",
subtitle = "Movements filtered in the 2. livello",
x = TeX(paste0("Area ", "$ \\[m^2\\]$"))) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
legend.position = "bottom",
legend.title = element_text(face="bold"))
## only get the statistics for the translational movements
traslativo = df %>%
filter(str_detect(nome_movimento, "trasla"))
# get the summary
summary(traslativo$area)
ggplot(res_dates, aes(x = year.posix)) +
geom_bar(fill = "grey", col = "black", size = 1.2) +
geom_text(
aes(label = ..count..),
stat = 'count',
nudge_y = 0.125,
vjust = -1
) +
scale_x_date(
date_breaks = "1 year",
labels = scales::date_format("%Y"),
limits = as.Date(c("2000-01-02", "2020-12-01"))
) +
labs(title = "Count of translational movements with day-information",
x = "Year",
y = "Count") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90),
axis.title.x = element_text(vjust = -1),
panel.grid.major = element_blank()
) +
annotate(
geom = "text",
x = as.Date("2016-01-01"),
y = 60,
label = paste0("n=", nrow(res_dates))
) +
annotate(
geom = "rect",
xmin = as.Date("2015-01-01"),
xmax = as.Date("2017-01-01"),
ymin = 55,
ymax = 65,
y = 60,
label = paste0("n=", nrow(res_dates)),
alpha = .5,
col = "black",
size = 1
)
ggplot(res_dates, aes(x = year.posix)) +
geom_bar(fill = "grey", col = "black", size = 1.2) +
geom_text(
aes(label = ..count..),
stat = 'count',
nudge_y = 0.125,
vjust = -1
) +
scale_x_date(
date_breaks = "1 year",
labels = scales::date_format("%Y"),
limits = as.Date(c("2000-01-02", "2020-12-01"))
) +
labs(title = "Count of translational movements with day-information",
x = "Year",
y = "Count") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90),
axis.title.x = element_text(vjust = -1),
panel.grid.major = element_blank()
panel.border = element_rect(color="black", size=2)
) +
annotate(
geom = "text",
x = as.Date("2016-01-01"),
y = 60,
label = paste0("n=", nrow(res_dates))
) +
annotate(
geom = "rect",
xmin = as.Date("2015-01-01"),
xmax = as.Date("2017-01-01"),
ymin = 55,
ymax = 65,
y = 60,
label = paste0("n=", nrow(res_dates)),
alpha = .5,
col = "black",
size = 1
)
ggplot(res_dates, aes(x = year.posix)) +
geom_bar(fill = "grey", col = "black", size = 1.2) +
geom_text(
aes(label = ..count..),
stat = 'count',
nudge_y = 0.125,
vjust = -1
) +
scale_x_date(
date_breaks = "1 year",
labels = scales::date_format("%Y"),
limits = as.Date(c("2000-01-02", "2020-12-01"))
) +
labs(title = "Count of translational movements with day-information",
x = "Year",
y = "Count") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90),
axis.title.x = element_text(vjust = -1),
panel.grid.major = element_blank(),
panel.border = element_rect(color="black", size=2)
) +
annotate(
geom = "text",
x = as.Date("2016-01-01"),
y = 60,
label = paste0("n=", nrow(res_dates))
) +
annotate(
geom = "rect",
xmin = as.Date("2015-01-01"),
xmax = as.Date("2017-01-01"),
ymin = 55,
ymax = 65,
y = 60,
label = paste0("n=", nrow(res_dates)),
alpha = .5,
col = "black",
size = 1
)
ggplot(res_dates, aes(x = year.posix)) +
geom_bar(fill = "grey", col = "black", size = 1.2) +
geom_text(
aes(label = ..count..),
stat = 'count',
nudge_y = 0.125,
vjust = -1
) +
scale_x_date(
date_breaks = "1 year",
labels = scales::date_format("%Y"),
limits = as.Date(c("2000-01-02", "2020-12-01"))
) +
labs(title = "Count of translational movements with day-information",
x = "Year",
y = "Count") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90),
axis.title.x = element_text(vjust = -1),
panel.grid.major = element_blank(),
panel.border = element_rect(color="black", fill="transparent", size=2)
) +
annotate(
geom = "text",
x = as.Date("2016-01-01"),
y = 60,
label = paste0("n=", nrow(res_dates))
) +
annotate(
geom = "rect",
xmin = as.Date("2015-01-01"),
xmax = as.Date("2017-01-01"),
ymin = 55,
ymax = 65,
y = 60,
label = paste0("n=", nrow(res_dates)),
alpha = .5,
col = "black",
size = 1
)
ggsave(filename = "../EURAC_MISC/landslide_eda/plots/translational_movements_with_day_info.png", width=12, height=8, dpi=500)
res_dates
min(res_dates$date.posix)
twok8_twok14_twok18 = res_dates %>%
filter(year.int %in% c(2008, 2014, 2018))
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x = day.posix),
fill = "grey",
col = "black",
size = 1.2) +
scale_x_date(date_breaks = "1 month",
labels = scales::date_format("%m")) +
labs(y = "Count", title = "Translational Landslides in 2008, 2014 and 2018", x =
"Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size = .5),
axis.text.x = element_text(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
names(twok8_twok14_twok18)
heasd(twok8_twok14_twok18$month)
head(twok8_twok14_twok18$month)
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x = month.int),
fill = "grey",
col = "black",
size = 1.2) +
scale_x_date(date_breaks = "1 month",
labels = scales::date_format("%m")) +
labs(y = "Count", title = "Translational Landslides in 2008, 2014 and 2018", x =
"Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size = .5),
axis.text.x = element_text(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x = month.int),
fill = "grey",
col = "black",
size = 1.2) +
labs(y = "Count", title = "Translational Landslides in 2008, 2014 and 2018", x =
"Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size = .5),
axis.text.x = element_text(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x = month.int),
fill = "grey",
col = "black",
size = 1.2) +
scale_x_continuous(breaks = 1:12) +
labs(y = "Count", title = "Translational Landslides in 2008, 2014 and 2018", x =
"Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size = .5),
axis.text.x = element_text(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x = month.int),
fill = "grey",
col = "black",
size = 1.2,
stat="identity") +
scale_x_continuous(breaks = 1:12) +
labs(y = "Count", title = "Translational Landslides in 2008, 2014 and 2018", x =
"Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size = .5),
axis.text.x = element_text(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x = month.int),
fill = "grey",
col = "black",
size = 1.2,
position="identity") +
scale_x_continuous(breaks = 1:12) +
labs(y = "Count", title = "Translational Landslides in 2008, 2014 and 2018", x =
"Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size = .5),
axis.text.x = element_text(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
twok8_twok14_twok18 = res_dates %>%
filter(year.int %in% c(2008, 2014, 2018)) %>%
group_by(year.int, month.int) %>%
summarise(
n = n()
)
twok8_twok14_twok18
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x = month.int,
y = n),
fill = "grey",
col = "black",
size = 1.2,
position="identity") +
scale_x_continuous(breaks = 1:12) +
labs(y = "Count", title = "Number of translational Landslides in 2008, 2014 and 2018", x =
"Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size = .5),
axis.text.x = element_text(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x = month.int,
y = n),
fill = "grey",
col = "black",
size = 1.2,
stat="identity") +
scale_x_continuous(breaks = 1:12) +
labs(y = "Count", title = "Number of translational Landslides in 2008, 2014 and 2018", x =
"Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size = .5),
axis.text.x = element_text(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
twok8_twok14_twok18 %>% filter(year.int == 2008)
twok8_twok14_twok18 = res_dates %>%
filter(year.int %in% c(2008, 2014, 2018)) %>%
group_by(year.int, month.int) %>%
summarise(
n = n()
)
ggsave(filename = "../EURAC_MISC/landslide_eda/plots/translational_movements_200820142018.png", width=12, height=8, dpi=500)
ggsave(filename = "man/figures/translational_movements_200820142018.png", width=12, height=8, dpi=500)
