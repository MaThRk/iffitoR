facet_grid(vars(year.int))
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x=day.posix), fill = "grey", col = "black", size = 1.2) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides in 2008, 2014 and 2018", x="Day") +
facet_grid(vars(year.int))
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x=day.posix), fill = "grey", col = "black", size = 1.2) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides in 2008, 2014 and 2018", x="Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x=day.posix), fill = "grey", col = "black", size = 1.2) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides in 2008, 2014 and 2018", x="Day") +
facet_grid(vars(year.int)) +
theme_minimal()
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x=day.posix), fill = "grey", col = "black", size = 1.2) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides in 2008, 2014 and 2018", x="Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
############################
##  all years facet plot  ##
############################
res_dates %>% filter(year.int>2005) %>%
ggplot() +
geom_bar(aes(x=day.posix), fill = "grey", col = "black", size = 1, width=1) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides after 2005", x="Day") +
facet_wrap(~year.int , ncol=1, scales="fixed", strip.position = "right")  +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
res_date = res %>%
filter(!is.na(anno_min),!is.na(mese_min),!is.na(giorno_min)) %>%
mutate(year = anno_min,
month = mese_min,
day = giorno_min) %>%
mutate(date = paste(year, month, day, sep = "/")) %>%
mutate(
date = as.Date(date),
year.int = year,
# year as int
year.posix = as.Date(paste0(year, "-01-01")),
day.posix = as.Date(paste0("2014", "/", month, "/", day))
) %>%  # year as posix...
filter(year > 2005) %>%
ggplot() +
geom_bar(aes(x=day.posix), fill = "black", size = .3, width=1) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides after 2005", x="Day") +
facet_grid(rows=vars(year))  +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
############################
##  all years facet plot  ##
############################
res_dates %>% filter(year.int>2005) %>%
ggplot() +
geom_bar(aes(x=day.posix), fill = "grey", col = "black", size = 1, width=1) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides after 2005", x="Day") +
facet_wrap(~year.int , ncol=1, scales="fixed", strip.position = "right")  +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
res_date = res %>%
filter(!is.na(anno_min),!is.na(mese_min),!is.na(giorno_min)) %>%
mutate(year = anno_min,
month = mese_min,
day = giorno_min) %>%
mutate(date = paste(year, month, day, sep = "/")) %>%
mutate(
date = as.Date(date),
year.int = year,
# year as int
year.posix = as.Date(paste0(year, "-01-01")),
day.posix = as.Date(paste0("2014", "/", month, "/", day))
) %>%  # year as posix...
filter(year > 2005) %>%
ggplot() +
geom_bar(aes(x=day.posix), fill = "black", size = .3, width=1) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides after 2005", x="Day") +
facet_grid(rows=vars(year))  +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
res_date
twok8_twok14_twok18 = res_dates %>%
filter(year.int %in% c(2008,2014,2018))
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x=day.posix), fill = "grey", col = "black", size = 1.2) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides in 2008, 2014 and 2018", x="Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
bannerCommenter::banner("Where are those?")
bannerCommenter::banner("Where are those?", snug=T)
head(twok8_twok14_twok18)
ggplot(twok8_twok14_twok18) +
geom_sf()
ggplot(twok8_twok14_twok18) +
geom_sf() +
facet_wrap(vars(year.int))
library(roxygen2)
st_crs(twok8_twok14_twok18)
devtools::load_all()
## get data from south tyrol
south_tyrol = iffitoR::get_shape_southtyrol()
devtools::load_all()
## get data from south tyrol
south_tyrol = iffitoR::get_shape_southtyrol()
devtools::load_all()
devtools::build()
devtools::document()
devtools::load_all()
## get data from south tyrol
south_tyrol = iffitoR::get_shape_southtyrol()
ggplot() +
geom_sf(south_tyrol) +
geom_sf(twok8_twok14_twok18) +
facet_wrap(vars(year.int))
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18) +
facet_wrap(vars(year.int))
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18) +
facet_wrap(vars(year.int), ncol=1)
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int)) +
facet_wrap(vars(year.int), ncol=1)
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int)) +
guides(color = FALSE) +
facet_wrap(vars(year.int), ncol=1)
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int)) +
guides(color = FALSE) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
utils::vignette("example1", package="iffitoR")
utils::vignette("joins", package="iffitoR")
res =
res_raw = make_shapefile(
database_dir = "../euracR/data/database/",
# normally null only setting it here for me
attribute_database_name = "tbl_frane",
# the name without extension
dictionary_database_name = "diz_frane",
shapefile = "../euracR/data/Shapefiles/IFFI10_1.shp",
# normally null only setting it here for me
# the colums we want to retrieve directly
attri = c(
"anno_min",
"mese_min",
"giorno_min",
"area"
),
# tables to join the description
joins = list("tbl_frane.Generalita.Cod_tipo" = c("diz_frane.diz_tipo_movi.cod_tipo",
"diz_frane.diz_tipo_movi.tipologia"),
"tbl_frane.clas_ii_liv.movimento" = c("diz_frane.diz_movimenti.movimento",
"diz_frane.diz_movimenti.nome_movimento"))
)
translativo_rotazionale_livello1 = res %>%
filter(grepl("traslativo", tipologia))
only_translativo = translativo_rotazionale_livello1 %>%
filter(grepl("traslativo", nome_movimento))
day_specific_traslativo = only_translativo %>%
filter(!is.na(anno_min),!is.na(mese_min),!is.na(giorno_min))
# which of them have a unique PIFF_ID?
(length(unique(day_specific_traslativo$PIFF_ID))) #all...
day_specific_traslativo = only_translativo %>%
filter(!is.na(anno_min),!is.na(mese_min),!is.na(giorno_min))
day_specific_traslativo %>% count(area)
day_specific_traslativo %>% mean(area)
day_specific_traslativo %>% na.omit(area)
day_specific_traslativo %>% na.omit(area) %>% mean(area)
str(day_specific_traslativo)
mean(day_specific_traslativo$area)
mean(day_specific_traslativo$area, na.rm = T)
day_specific_traslativo %>% na.omit()
day_specific_traslativo %>% na.omit() %>% select(mean = colMeans(area, na.rm = T))
day_specific_traslativo %>% summmarise(area)
day_specific_traslativo %>% summarise(area)
day_specific_traslativo %>% summarise(area. .fun=mean)
day_specific_traslativo %>% summarise(area. .funs=mean)
day_specific_traslativo %>% summarise(area. .funs="mean")
day_specific_traslativo %>% summarise(area, mean)
day_specific_traslativo %>% summarise(area, funs(m=mean))
day_specific_traslativo %>% summarise(area, c("mean"))
lapply(day_specific_traslativo, function(x) sum(!is.na(x)))
translativo_rotazionale_livello1 = res %>%
filter(grepl("traslativo", tipologia))
only_translativo = translativo_rotazionale_livello1 %>%
filter(grepl("traslativo", nome_movimento))
day_specific_traslativo = only_translativo %>%
filter(!is.na(anno_min),!is.na(mese_min),!is.na(giorno_min))
# which of them have a unique PIFF_ID?
(length(unique(day_specific_traslativo$PIFF_ID))) #all...
res_dates = day_specific_traslativo %>% mutate(year.int = anno_min,
month.int = mese_min,
day.int = giorno_min) %>%
mutate(date_formatted = paste(year.int, month.int, day.int, sep = "/")) %>%
mutate(
date.posix = as.Date(date_formatted),
year.posix = as.Date(paste0(year.int, "-01-01")),
month = months(date.posix),
day.posix = as.Date(paste0("2000", "/", month.int, "/", day.int))
)
ggplot(res_dates, aes(x = year.posix)) +
geom_bar(fill = "grey", col = "black", size = 1.2) +
geom_text(
aes(label = ..count..),
stat = 'count',
nudge_y = 0.125,
vjust = -1
) +
scale_x_date(
date_breaks = "1 year",
labels = scales::date_format("%Y"),
limits = as.Date(c("2000-01-02", "2020-12-01"))
) +
labs(title = "Count of translational movements with day-information",
x = "Year",
y = "Count") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90),
axis.title.x = element_text(vjust = -1),
panel.grid.major = element_blank()
) +
annotate(geom="text", x=as.Date("2016-01-01"), y=60, label=paste0("n=", nrow(res_dates))) +
annotate(geom="rect",
xmin=as.Date("2015-01-01"),
xmax=as.Date("2017-01-01"),
ymin=55,
ymax=65,
y=60, label=paste0("n=", nrow(res_dates)),
alpha=.5,
col="black",
size=1)
twok8_twok14_twok18 = res_dates %>%
filter(year.int %in% c(2008,2014,2018))
ggplot(twok8_twok14_twok18) +
geom_bar(aes(x=day.posix), fill = "grey", col = "black", size = 1.2) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides in 2008, 2014 and 2018", x="Day") +
facet_grid(vars(year.int)) +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
############################
##  all years facet plot  ##
############################
res_dates %>% filter(year.int>2005) %>%
ggplot() +
geom_bar(aes(x=day.posix), fill = "grey", col = "black", size = 1, width=1) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides after 2005", x="Day") +
facet_wrap(~year.int , ncol=1, scales="fixed", strip.position = "right")  +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
res_date = res %>%
filter(!is.na(anno_min),!is.na(mese_min),!is.na(giorno_min)) %>%
mutate(year = anno_min,
month = mese_min,
day = giorno_min) %>%
mutate(date = paste(year, month, day, sep = "/")) %>%
mutate(
date = as.Date(date),
year.int = year,
# year as int
year.posix = as.Date(paste0(year, "-01-01")),
day.posix = as.Date(paste0("2014", "/", month, "/", day))
) %>%  # year as posix...
filter(year > 2005) %>%
ggplot() +
geom_bar(aes(x=day.posix), fill = "black", size = .3, width=1) +
scale_x_date(
date_breaks = "1 month",
labels = scales::date_format("%m")
) +
labs(y="Count", title = "Translational Landslides after 2005", x="Day") +
facet_grid(rows=vars(year))  +
theme_minimal() +
theme(
panel.background = element_rect(colour = "black", size=.5),
axis.text.x = element_text(),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold")
)
res_date
## get data from south tyrol
south_tyrol = iffitoR::get_shape_southtyrol()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
guides(color = FALSE) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_size(name="Area in m^2") +
guides(color = FALSE) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_size(name="Area in m^2") +
guides(color = FALSE) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal() +
theme(
plot.title = element_blank()
)
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_size(name="Area in m^2") +
guides(color = FALSE) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_size(name="Area in m^2") +
guides(color = FALSE) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_size(name="Area in m^2") +
guides(color = T) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_size(name="Area in m^2") +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_color_discrete() +
scale_size(name="Area in m^2") +
guides(color = T) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_color_discrete(values=C("red", "blue", "green")) +
scale_size(name="Area in m^2") +
guides(color = T) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=as.factor(year.int), size=area)) +
scale_color_discrete(values=C("red", "blue", "green")) +
scale_size(name="Area in m^2") +
guides(color = T) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
twok8_twok14_twok18$year.int = as.factor(twok8_twok14_twok18$year.int)
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_color_discrete(values=C("red", "blue", "green")) +
scale_size(name="Area in m^2") +
guides(color = T) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_size(name="Area in m^2") +
guides(color = T) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_size(name="Area in m^2") +
guides(color = F) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_color_manual(values = c("red", "green", "blue"))
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_color_manual(values = c("red", "green", "blue")) +
scale_size(name="Area in m^2") +
guides(color = F) +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_color_manual(values = c("red", "green", "blue")) +
scale_size(name="Area in m^2") +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
ggplot() +
geom_sf(data = south_tyrol) +
geom_sf(data = twok8_twok14_twok18, aes(col=year.int, size=area)) +
scale_color_manual(values = c("red", "green", "blue"), name="Year") +
scale_size(name="Area in m^2") +
facet_wrap(vars(year.int), ncol=1) +
theme_minimal()
st_write(res_dates, "local_data/spatial_data/trans_slides_dayinfo.gpkg")
st_crs(res_dates)
a = st_crs(res_dates)
a
class(a)
a$wkt
a$input
str(a)
